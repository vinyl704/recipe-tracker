{"version":3,"sources":["RecipeCreate.js","Recipe.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","editFormState","createRecipe","initialFormState","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","target","value","onSubmit","e","preventDefault","type","id","onChange","placeholder","required","Recipe","idx","editRecipe","recipe","recipes","setRecipes","onDeleteClick","edit","setEdit","editedRecipe","setEditedRecipe","editSwitchHandler","key","className","style","display","flexWrap","flexDirection","width","alignItems","margin","onClick","src","alt","RecipeList","deleteRecipe","recipeRows","map","RecipeData","App","window","localStorage","JSON","parse","getItem","data","color","fontWeight","textAlign","fontSize","paddingBottom","editID","currentRecipes","item","delID","currentList","filter","setItem","stringify","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dcbba01.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({createRecipe},editFormState) {\n\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n  const initialFormState ={\n    name:'',\n    cuisine:'',\n    photo:'',\n    ingredients:'',\n    preparation:'',\n  }\n  const [formData, setFormData] = useState({...initialFormState})\n\n  const handleSubmit = (e) =>{\n    e.preventDefault()\n    createRecipe(formData)\n    setFormData({...initialFormState})\n  }\n  const handleChange = ({target}) =>{setFormData({...formData,[target.name]:target.value})}\n  \n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody>\n          <tr>\n            <td><input type=\"text\" name=\"name\" id=\"name\" onChange={handleChange} placeholder=\"Name\" value={formData.name} required/></td>\n            <td><input type=\"text\" name=\"cuisine\" id=\"cuisine\" onChange={handleChange} placeholder=\"Cuisine\" value={formData.cuisine} required/></td>\n            <td><input type=\"url\" name=\"photo\" id=\"photo\" onChange={handleChange} placeholder=\"URL\" value={formData.photo} /></td>\n            <td><textarea name=\"ingredients\" onChange={handleChange} placeholder=\"Ingredients\" value={formData.ingredients} required></textarea></td>\n            <td><textarea name=\"preparation\" onChange={handleChange} placeholder=\"Preparation\" value={formData.preparation} required></textarea></td>\n            \n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React, {useState} from 'react';\r\n\r\nexport default function Recipe({idx,editRecipe,recipes,setRecipes,recipe,onDeleteClick}){\r\n    const {name,cuisine,photo,ingredients,preparation} = recipe;\r\n    \r\n    \r\n    const [edit, setEdit] = useState(false);\r\n    \r\n    const [editedRecipe,setEditedRecipe] =useState({...recipe})\r\n    const handleChange = ({target}) => setEditedRecipe({...editedRecipe,[target.name]:target.value})\r\n    \r\n    const editSwitchHandler = () => setEdit(!edit);\r\n    const editSubmitHandler = () => editRecipe([idx,editedRecipe])\r\n    return(\r\n        !edit?(\r\n        <tr key={idx}>\r\n            <td className='content_td'><p>{name}</p></td>\r\n            <td className='content_td'><p>{cuisine}</p></td>\r\n            <td className='content_td'><img src={photo} alt=\"\"/></td>\r\n            <td className='content_td'><p>{ingredients}</p></td>\r\n            <td className='content_td'><p>{preparation}</p></td>\r\n            \r\n            <td className='actionButtons content_td' style={{display:\"flex\",flexWrap:\"wrap\",flexDirection:\"column\", width:\"100%\",alignItems:\"center\",margin:\"auto\"}} >\r\n                <button name=\"edit\" id={idx} onClick={editSwitchHandler}>Edit</button>\r\n                <button name=\"delete\" onClick={onDeleteClick}>Delete</button>    \r\n            </td>\r\n                \r\n                    \r\n            \r\n        </tr>)\r\n        :\r\n        (   \r\n            <tr key={idx}>\r\n                <td className='content_td'><input name=\"name\" value={editedRecipe.name} onChange={handleChange}/></td>\r\n                <td className='content_td'><input name=\"cuisine\" value={editedRecipe.cuisine} onChange={handleChange}/></td>\r\n                <td className='content_td'><input name=\"photo\" value={editedRecipe.photo} onChange={handleChange} /></td>\r\n                <td className='content_td'><textarea name=\"ingredients\" onChange={handleChange} value={editedRecipe.ingredients}/></td>\r\n                <td className='content_td'><textarea name=\"preparation\" value={editedRecipe.preparation} onChange={handleChange}/></td>\r\n                <td className='content_td' style={{display:\"flex\",flexWrap:\"wrap\",flexDirection:\"column\", width:\"100%\",alignItems:\"center\",margin:\"auto\"}} >\r\n                    <button name=\"submit\" id={idx} onClick={(e)=>{\r\n                     \r\n                        editSwitchHandler(e)\r\n                        editSubmitHandler(idx,editedRecipe)\r\n                        }}>Submit</button>\r\n                      \r\n                </td>\r\n                    \r\n                        \r\n                \r\n            </tr>\r\n            \r\n            )\r\n\r\n    )\r\n}","import React from \"react\";\nimport Recipe from \"./Recipe\";\n\nfunction RecipeList({recipes,deleteRecipe,editRecipe}) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\nconst recipeRows = recipes.map((recipe,idx)=><Recipe editRecipe={editRecipe} recipes ={recipes} recipe={recipe} idx={idx} key={idx} onDeleteClick={()=>deleteRecipe(idx)}/>) \n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {recipeRows}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n  \n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\";\n\n\nfunction App() {\n  let [data,setData]=useState(()=>{\n    if (!window.localStorage.recipes) {\n    return RecipeData;\n  } else {\n    return JSON.parse(window.localStorage.getItem(\"recipes\"));\n  }\n  });\n  \n  const [recipes, setRecipes] = useState(data);\n\n  const createRecipe = (recipe) =>\n    setRecipes((currentRecipes) => [...currentRecipes, recipe]);\n  const deleteRecipe = (delID) =>\n    setRecipes((currentList) =>\n      currentList.filter((item, idx) => idx !== delID)\n    );\n\n    //edit component\n  const editRecipe = ([editID, editedRecipe]) =>\n    setRecipes((currentRecipes) =>\n      currentRecipes.map((item, idx) => {\n        let match = idx === editID;\n        //editedRecipe\n        if (match) item = { ...editedRecipe };\n        return item;\n      })\n    );\n\n  function handleClear(e) {\n    e.preventDefault()\n    window.localStorage.setItem(\"recipes\", \"[]\");\n    setRecipes([])\n  }\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    window.localStorage.setItem(\"recipes\", JSON.stringify(recipes));\n  };\n\n  const handleFactoryReset = (e) =>{\n    //e.preventDefault();\n    window.localStorage.removeItem('recipes')\n    setRecipes(RecipeData)\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Delicious Food Recipes</h1>\n      </header>\n      <p style={{color:\"red\",fontWeight:\"bold\",textAlign:\"center\",fontSize:\"14px\",paddingBottom:\"20px\"}}>\n        Using the \"Save List\" function saves your list to your browser/device<br/>\n        \"Factory Reset\" removes saved list from browser/device.\n        </p>\n        <RecipeList\n          recipes={recipes}\n          setRecipes={setRecipes}\n          editRecipe={editRecipe}\n          deleteRecipe={deleteRecipe} \n        />\n     \n      <RecipeCreate createRecipe={createRecipe} />\n        \n      <div id=\"button-container\">\n        <button name=\"save\"onClick={handleSave}>\n          Save List\n        </button>\n        <button name=\"clear\" onClick={handleClear}>\n          Clear List\n        </button>\n        <button name=\"factoryReset\" onClick={handleFactoryReset}>\n          Facory Reset\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}